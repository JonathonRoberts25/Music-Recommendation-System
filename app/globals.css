/* app/globals.css
   Plain CSS (no @apply) so Tailwind cannot raise "unknown utility" errors.
   Styles: dark navy background, white text, buttons/selects dark blue.
*/

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Theme variables */
:root{
  --bg-hex: #0a1a2f;        /* page background */
  --fg-hex: #eef2f7;        /* main text */
  --card-hex: #0f2a45;      /* dropdown / card background */
  --primary-hex: #0e1a3d;   /* button primary dark blue */
  --primary-hover: #213160; /* slightly lighter hover */
  --muted-hex: #94a3b8;     /* muted text */
  --border-rgba: rgba(255,255,255,0.08);
  --pop-shadow: 0 8px 24px rgba(3,7,18,0.6);
  --radius: 0.5rem;
}

/* Page base */
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  background-color: var(--bg-hex) !important;
  color: var(--fg-hex) !important;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
}

/* ensure root container fills the page */
#__next, main {
  min-height: 100vh;
}

/* Header styling */


/* Headings */
h1, h2, h3 {
  color: var(--fg-hex);
  margin: 0;
}

/* Muted paragraph text */
.muted-text, p {
  color: var(--muted-hex);
}

/* ---------- Buttons: global default (dark blue) ---------- */
/* This will style native buttons and most components that render <button> */
button, .btn {
  background-color: var(--primary-hex);
  color: var(--fg-hex);
  border: none;
  padding: 0.6rem 1rem;
  border-radius: var(--radius);
  cursor: pointer;
  font: inherit;
  transition: background-color 150ms ease, transform 120ms ease;
  box-shadow: 0 1px 0 rgba(0,0,0,0.1) inset;
}

/* Outline-style when using variant="outline" on component libs may still add borders;
   we override to keep dark-blue look */
button[variant="outline"], .btn-outline {
  background-color: transparent;
  color: var(--fg-hex);
  border: 1px solid var(--border-rgba);
}

/* Hover & active */
button:hover, .btn:hover {
  background-color: var(--primary-hover);
}
button:active, .btn:active {
  transform: translateY(1px);
}

header::after {
  content: "";
  display: block;
  border-bottom: 1px solid var(--border-rgba);
  margin-top: 0.75rem; /* how far below the content */
}


/* Focus ring */
button:focus, .btn:focus, input:focus, select:focus, textarea:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(30,58,138,0.12);
}

/* ---------- Selects & Inputs ---------- */
select, input, textarea {
  background-color: var(--primary-hex);
  color: var(--fg-hex);
  border: 1px solid var(--border-rgba);
  padding: 0.5rem 0.75rem;
  border-radius: calc(var(--radius) - 2px);
  font: inherit;
}

/* Make options readable in native selects */
option {
  background-color: var(--card-hex);
  color: var(--fg-hex);
}

/* Adjust native select arrow spacing (if needed) */
select::-ms-expand { display: none; }

/* ---------- Radix / Popper fixes (dropdowns, select content) ---------- */
[data-radix-popper-content-wrapper] {
  z-index: 9999 !important;
}

/* Radix wraps the actual popper content inside a div — style that inner div */
[data-radix-popper-content-wrapper] > div {
  border: 1px solid rgba(255,255,255,0.12);
  border-radius: var(--radius);
  box-shadow: var(--pop-shadow);
  background-color: var(--card-hex);
  color: var(--fg-hex);
  overflow: hidden;
}

/* Select items (within the popper) — library may render <div> or <li> elements */
[data-radix-popper-content-wrapper] [role="option"],
[data-radix-popper-content-wrapper] li,
[data-radix-popper-content-wrapper] div[role="menuitem"],
.select-item {
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  border-radius: 0.375rem;
}

/* Hover for items uses same primary color */
[data-radix-popper-content-wrapper] [role="option"]:hover,
[data-radix-popper-content-wrapper] li:hover,
[data-radix-popper-content-wrapper] div[role="menuitem"]:hover,
.select-item:hover {
  background-color: var(--primary-hex);
  color: var(--fg-hex);
}

/* ---------- Misc ---------- */
a { color: inherit; text-decoration: none; }
img { display: block; max-width: 100%; }

/* Small helper class if you want muted text quickly */
.muted { color: var(--muted-hex); }
